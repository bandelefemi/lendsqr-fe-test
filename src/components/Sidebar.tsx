import React from 'react'
import { Link, NavLink } from 'react-router-dom'
// import { MdOutlineCancel } from 'react-icons/md'
// import { TooltipComponent } from '@syncfusion/ej2-react-popups'
import { navLinks } from './data'
import { useStateContext } from '../contexts/ContextProvider'
import { TooltipComponent } from '@syncfusion/ej2-react-popups'
import { MdOutlineCancel } from 'react-icons/md'


 
const Sidebar = () => {

  const { activeMenu, setActiveMenu, screenSize } = useStateContext()

  const handleCloseSideBar =()=> {
    if (activeMenu && screenSize < 900) {
      setActiveMenu(false)
    } else {setActiveMenu(true)}
  }

  const activeLink = 'flex items-center gap-5 pl-4 pt-3 pb-2.5  text-[#213f7d] bg-[#39cdcc]/10 text-md m-2 border-l-2 border-[#39cdcc]'
  const normalLink = 'flex items-center gap-5 pl-4 pt-3 pb-2.5  text-[#213f7d]/60 dark:hover:text-black hover:bg-light-gray dark:text-gray-200 text-md m-2'

  return (
    <div className='ml-3 z-100 shadow-lg h-screen md:overflow-hidden overflow-auto 
    md:hover:overflow-auto pb-10 '>
      {activeMenu && (<>
      <div className='flex justify-between items-center'>
        <Link to='/dashboard' onClick={()=> {}} className='items-center 
        ml-4 mt-5'>
          <svg width="174" height="36" viewBox="0 0 174 36" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M0 2.66541C0 2.11304 0.443238 1.66525 0.99 1.66525H3.96C4.50676 1.66525 4.95 2.11304 4.95 2.66541V20.6682C4.95 21.2206 5.39324 21.6684 5.94 21.6684H18.81C19.3568 21.6684 19.8 21.2206 19.8 20.6682V17.6678C19.8 17.1154 19.3568 16.6676 18.81 16.6676H12.87C11.2297 16.6676 9.9 15.3243 9.9 13.6671V4.66573C9.9 3.00861 11.2297 1.66525 12.87 1.66525H21.78C23.4203 1.66525 24.75 3.00861 24.75 4.66573V23.6687C24.75 25.3258 23.4203 26.6692 21.78 26.6692H2.97C1.32971 26.6692 0 25.3258 0 23.6687V2.66541ZM19.8 7.6662C19.8 7.11383 19.3568 6.66604 18.81 6.66604H14.85V10.6667C14.85 11.219 15.2932 11.6668 15.84 11.6668H19.8V7.6662Z" fill="url(#paint0_linear_6819_58335)"/>
            <path d="M35.325 0V27.8055H40.0894V0H35.325Z" fill="#213F7D"/>
            <path d="M63.5388 19.7304C64.2869 11.6552 60.2313 7.59779 53.7344 7.59779C47.4344 7.59779 43.4181 11.8939 43.4181 17.8608C43.4181 24.1459 47.395 28.3227 54.0888 28.3227C57.0419 28.3227 60.3888 27.2884 62.4363 25.1403L59.365 22.0773C58.2625 23.2309 55.9394 23.9072 54.1675 23.9072C50.7813 23.9072 48.6944 22.1569 48.3794 19.7304H63.5388ZM48.4581 15.7127C49.1669 13.1669 51.2931 11.8939 53.8919 11.8939C56.6481 11.8939 58.6169 13.1669 58.9319 15.7127H48.4581Z" fill="#213F7D"/>
            <path d="M86.3372 27.8055V17.5028C86.3372 11.337 82.6753 7.87624 78.1078 7.87624C75.6666 7.87624 73.6978 8.87072 71.7291 10.8199L71.4141 8.1547H67.1222V27.8055H71.8866V17.7812C71.8866 14.7978 73.8947 12.2917 76.8478 12.2917C79.9191 12.2917 81.5334 14.5591 81.5334 17.5425V27.8055H86.3372Z" fill="#213F7D"/>
            <path d="M99.876 12.2519C102.908 12.2519 105.507 14.5591 105.507 17.9801C105.507 21.5204 102.908 23.7481 99.876 23.7481C96.8048 23.7481 94.3635 21.4011 94.3635 17.9801C94.3635 14.4398 96.8048 12.2519 99.876 12.2519ZM105.822 0V10.8597C104.68 8.83094 101.49 7.71713 99.4429 7.71713C93.7729 7.71713 89.5598 11.2177 89.5598 17.9801C89.5598 24.4243 93.8517 28.2431 99.561 28.2431C101.924 28.2431 104.325 27.4475 105.822 25.1006L106.137 27.8055H110.625V0H105.822Z" fill="#213F7D"/>
            <path d="M130.162 10.2232C127.917 8.23425 125.634 7.63757 122.602 7.63757C119.058 7.63757 114.412 9.22873 114.412 13.7635C114.412 18.2188 118.782 19.5713 122.444 19.8497C125.201 20.0088 126.303 20.5657 126.303 21.9182C126.303 23.3503 124.61 24.305 122.799 24.2652C120.633 24.2254 117.483 23.0718 116.105 21.5204L113.742 24.9812C116.577 27.9646 119.649 28.4818 122.72 28.4818C128.272 28.4818 131.067 25.4983 131.067 22.0376C131.067 16.8265 126.421 15.9912 122.759 15.7525C120.279 15.5934 119.137 14.8773 119.137 13.6044C119.137 12.3713 120.397 11.6552 122.681 11.6552C124.531 11.6552 126.106 12.0928 127.484 13.4055L130.162 10.2232Z" fill="#213F7D"/>
            <path d="M143.518 23.5889C140.25 23.5889 138.006 21.0829 138.006 18.0199C138.006 14.9569 140.053 12.4508 143.518 12.4508C146.983 12.4508 149.031 14.9569 149.031 18.0199C149.031 21.0829 146.786 23.5889 143.518 23.5889ZM154.268 36V8.19448H149.779L149.464 10.8994C147.968 8.7116 145.369 7.75691 143.164 7.75691C137.179 7.75691 133.202 12.2519 133.202 18.0199C133.202 23.7481 136.785 28.2829 143.006 28.2829C145.054 28.2829 148.086 27.6464 149.464 25.4983V36H154.268Z" fill="#213F7D"/>
            <path d="M158.487 8.19448V27.8055H163.291V17.463C163.291 13.8431 165.614 12.4906 168.134 12.4906C169.709 12.4906 170.615 12.9282 171.599 13.7635L173.765 9.54696C172.702 8.47293 170.772 7.67735 168.764 7.67735C166.795 7.67735 164.787 8.03536 163.291 10.4619L162.937 8.19448H158.487Z" fill="#213F7D"/>
            <defs>
              <linearGradient id="paint0_linear_6819_58335" x1="-1.87183e-06" y1="38.9211" x2="26.2531" y2="-4.22382" gradientUnits="userSpaceOnUse">
              <stop stop-color="#213F7D"/>
              <stop offset="1" stop-color="#39CDCC"/>
              </linearGradient>
            </defs>
          </svg>
        </Link>
        <TooltipComponent content='Menu' position='BottomCenter'>
          <button type='button' onClick={()=> setActiveMenu((prevState: any) => !prevState)} className='text-xl 
          rounded-full p-3 hover:bg-light-gray mt-4 block md:hidden'>
            <MdOutlineCancel />
          </button>
        </TooltipComponent>
      </div> 
      <div className='mt-10'>
      <NavLink to={`/dashboard`}
                       className={({ isActive })=> normalLink}
                      //  style={({isActive}) => ({backgroundColor: isActive? '#ebfaf9': ''})}
                       onClick={()=>handleCloseSideBar()}>
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path opacity="0.4" d="M10 9H16V13.5C16 14.3 15.3 15 14.5 15H1.5C0.7 15 0 14.3 0 13.5V9H6V10.5C6 10.6326 6.05268 10.7598 6.14645 10.8536C6.24021 10.9473 6.36739 11 6.5 11H9.5C9.63261 11 9.75979 10.9473 9.85355 10.8536C9.94732 10.7598 10 10.6326 10 10.5V9Z" fill="#213F7D"/>
                  <path d="M14.5 4H12V2.5C12 1.7 11.3 1 10.5 1H5.5C4.7 1 4 1.7 4 2.5V4H1.5C0.7 4 0 4.7 0 5.5V8H16V5.5C16 4.7 15.3 4 14.5 4ZM10 4H6V3H10V4Z" fill="#213F7D"/>
                </svg>
                <span className='capitalize'>
                  Switch Organization
                </span>
                <span>
                  <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M11.0573 3.9938C11.8984 3.15271 13.1595 4.45646 12.3184 5.25489L7.56759 10.0056C7.23127 10.3841 6.64282 10.3841 6.3065 10.0056L1.64002 5.38131C0.841037 4.54022 2.10267 3.27907 2.94322 4.12022L6.937 8.114L11.0573 3.9938Z" fill="#213F7D"/>
                  </svg>
                </span>
              </NavLink>
      <NavLink to={`/dashboard`}
                       className={({ isActive })=> normalLink}
                       style={{marginTop: '20px'}}
                       onClick={()=>handleCloseSideBar()}>
                <svg width="16" height="15" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_59971_345)">
                    <path opacity="0.4" d="M9.33341 12.8775V10.2222C9.33341 10.1043 9.28659 9.99127 9.20324 9.90792C9.11989 9.82457 9.00684 9.77774 8.88897 9.77774H7.11119C6.99332 9.77774 6.88027 9.82457 6.79692 9.90792C6.71357 9.99127 6.66675 10.1043 6.66675 10.2222V12.8808C6.66675 12.9983 6.62023 13.111 6.53736 13.1943C6.45449 13.2776 6.34201 13.3247 6.22453 13.3252L3.11119 13.3333C2.99332 13.3333 2.88027 13.2865 2.79692 13.2031C2.71357 13.1198 2.66675 13.0067 2.66675 12.8889V8.33497L7.78869 4.11691C7.84889 4.06839 7.92388 4.04193 8.00119 4.04193C8.07851 4.04193 8.1535 4.06839 8.21369 4.11691L13.3334 8.3333V12.8889C13.3334 13.0067 13.2866 13.1198 13.2032 13.2031C13.1199 13.2865 13.0068 13.3333 12.889 13.3333L9.77786 13.3247C9.71926 13.3247 9.66124 13.3131 9.60713 13.2906C9.55303 13.2681 9.50391 13.2351 9.4626 13.1935C9.4213 13.152 9.38862 13.1026 9.36645 13.0484C9.34427 12.9942 9.33305 12.9361 9.33341 12.8775Z" fill="#213F7D"/>
                    <path d="M15.9255 7.45416L15.2172 8.31528C15.1894 8.34913 15.1552 8.37717 15.1166 8.3978C15.0779 8.41843 15.0356 8.43124 14.992 8.4355C14.9484 8.43975 14.9044 8.43537 14.8625 8.42261C14.8206 8.40985 14.7816 8.38895 14.7478 8.36111L8.21362 2.97805C8.15342 2.92953 8.07843 2.90307 8.00112 2.90307C7.9238 2.90307 7.84882 2.92953 7.78862 2.97805L1.25475 8.36111C1.18646 8.41724 1.09866 8.44395 1.01068 8.43536C0.922692 8.42676 0.841724 8.38357 0.785587 8.31528L0.0772555 7.45416C0.020991 7.38601 -0.00590471 7.2983 0.0024817 7.21032C0.0108681 7.12234 0.0538501 7.04129 0.121978 6.985L7.15251 1.19444C7.39117 0.998046 7.69065 0.890667 7.99973 0.890667C8.30881 0.890667 8.60829 0.998046 8.84695 1.19444L11.3333 3.23916V1.22222C11.3333 1.13381 11.3684 1.04903 11.431 0.986517C11.4935 0.924004 11.5783 0.888885 11.6667 0.888885H13.2222C13.3106 0.888885 13.3954 0.924004 13.4579 0.986517C13.5204 1.04903 13.5555 1.13381 13.5555 1.22222V5.06972L15.8778 6.98389C15.9119 7.01156 15.9402 7.0457 15.9611 7.08434C15.9819 7.12299 15.995 7.16539 15.9994 7.20909C16.0039 7.25279 15.9996 7.29694 15.9869 7.339C15.9743 7.38106 15.9534 7.4202 15.9255 7.45416Z" fill="#213F7D"/>
                  </g>
                  <defs>
                    <clipPath id="clip0_59971_345">
                      <rect width="16" height="14.2222" fill="white"/>
                    </clipPath>
                  </defs>
                </svg>
                <span className='capitalize'>
                  Dashboard
                </span>
              </NavLink>
          
        {navLinks.map((item) => (
          <div key={item.title}> 
            <div className='text-gray-400 m-3 mt-4 uppercase text-xs'>
             {item.title}
            </div>
            
            {item.links.map((Link)=> (
              <NavLink to={`/dashboard/${Link.name}`} 
                       key={Link.name}
                       className={({ isActive })=> isActive? 
                       activeLink: normalLink}
                      //  style={({isActive}) => ({backgroundColor: isActive? '#ebfaf9': ''})}
                       onClick={()=>handleCloseSideBar()}>
                {Link.icon}
                <span className='capitalize'>
                  {Link.name}
                </span>
              </NavLink>
            ))}
          </div>
        ))}
      </div>
      </> )}
    </div>
  )
}

export default Sidebar